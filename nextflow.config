manifest {
  nextflowVersion = '!>=20.12.1-edge'
}

params.publishDir = "./results"

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
params.logDir = "${params.publishDir}/_transcript/${trace_timestamp}"

timeline {
    enabled = true
    file    = "${params.logDir}/execution_timeline.html"
}
report {
    enabled = true
    file    = "${params.logDir}/execution_report.html"
}
trace {
    enabled = true
    file    = "${params.logDir}/execution_trace.txt"
}
dag {
    enabled = true
    file    = "${params.logDir}/pipeline_dag.svg"
}

process.afterScript = {
    logMainDir = params.logDir

    // Make sure paths are absolute
    logMainDir = java.nio.file.Paths.get(logMainDir).toAbsolutePath().normalize().toString()

    // Build log directory path based on task name
    logSubDir = task.name.replace(" (null)", "").replace(" ", "/").replaceAll(" ", "_").replaceAll("[()]", "")
    logDir = logMainDir + "/" + logSubDir

    // Define command to copy log files
    cpLogCmd = workflow.profile == "aws" ?
        "nxf_s3_upload '*.txt' ${logDir}; " :
        "mkdir -p ${logDir}; cp -a *.txt ${logDir}; "

    // Assemble final command
    cmd = "ls -alR --full-time > .command.ls; "
    cmd += "mkdir nxf_log; "
    cmd += "for file in .command.*; do cp -a \${file} nxf_log/\${file#.}.txt; done; "
    cmd += "cd nxf_log; "
    cmd += cpLogCmd
    cmd += "cd ..;"
    cmd
}

// TODO 1: unquote and adapt `rootDir` according to relative path within project
// params {
//   rootDir = "$projectDir/../.."
// }
// 
// workflowDir = "${params.rootDir}/workflows"
// targetDir = "${params.rootDir}/target/nextflow"

// TODO 2: insert custom imports here

// TODO 3: unquote
// docker {
//   runOptions = "-v \$(realpath ${params.rootDir}):\$(realpath ${params.rootDir})"
// }
